<?xml version="1.0" encoding="utf-8"?>
<mx:WindowedApplication xmlns:mx="http://www.adobe.com/2006/mxml"
						width="800" height="600" addedToStage="main()" fontFamily="Verdana"
						fontSize="12" horizontalScrollPolicy="off" layout="absolute"
						showStatusBar="false" verticalScrollPolicy="off">

	<mx:Script>
		<![CDATA[
			import compress.ZLIB;
			
			import flash.filesystem.File;
			import flash.filesystem.FileStream;
			import flash.utils.getTimer;
			import flash.utils.setTimeout;
			
			import mx.controls.Alert;

			private var Stageheight:Number=flash.system.Capabilities.screenResolutionY;

			private var Stagewidth:Number=flash.system.Capabilities.screenResolutionX;

			private var fileToOpenSwf:File=File.desktopDirectory;

			private var ByteOriginal:Dictionary=null;

			private var ByteEncrypt:Dictionary=null;

			private var PathDic:Dictionary=null;

			private var fileArray:Array=null;

			protected function main():void
			{
				this.move(Stagewidth / 2 - this.width / 2, Stageheight / 2 - this.height / 2);
				// ...
				btnSaveOriginal.visible=false;
				Cbox1.selected=true;
				Cbox2.selected=false;
				Cbox3.selected=false;
				Cbox1.addEventListener(Event.CHANGE, CboxChange);
				Cbox2.addEventListener(Event.CHANGE, CboxChange);
				Cbox3.addEventListener(Event.CHANGE, CboxChange);
				Cbox4.addEventListener(Event.CHANGE, CboxChange);
				
				this.addEventListener(InvokeEvent.INVOKE,invokeHandler);
			}
			private var fileEvent:FileListEvent=new FileListEvent("");
			private var isLine:Boolean=false;
			private function invokeHandler(e:InvokeEvent):void{
				if(e.arguments.length>0){
					var __f:File=new File(e.arguments[0]);
					if(__f.isDirectory){
						var m_file_lst:Array=__f.getDirectoryListing();
						if(m_file_lst.length>0){
							fileEvent.files=[];
							for each(var m_file:File in m_file_lst){
								if(!m_file.isDirectory&&m_file.name.indexOf(".swf")>=0){
									fileEvent.files.push(m_file);
								}
							}
							isLine=true;
							SWFfileSelected(fileEvent);
						}
					}else{
						fileEvent.files=[];
						fileEvent.files.push(__f);
						isLine=true;
						SWFfileSelected(fileEvent);
					}
				}
			}

			private function CboxChange(e:Event):void
			{
				if (e.currentTarget != Cbox4)
				{
					Cbox1.selected=false;
					Cbox2.selected=false;
					Cbox3.selected=false;
					e.currentTarget.selected=true;
				}
				else
				{
					btnSaveOriginal.visible=Cbox4.selected;
				}
			}

			protected function button1_clickHandler(event:MouseEvent):void
			{
				ByteOriginal=null;
				ByteEncrypt=null;
				// btnSaveOriginal.visible=false;
				sizetxt.text="";
				// nametxt.text="";
				timetxt.text="encrypt time:0ms";
				var SelectedFile:Array=[];
				if (Cbox1.selected)
					SelectedFile=["(swf|amd)", "*.swf;*.amd"];
				if (Cbox2.selected)
					SelectedFile=["(swf)", "*.swf"];
				if (Cbox3.selected)
					SelectedFile=["(amd)", "*.amd"];
				var txtFilter:FileFilter=new FileFilter("选择要处理的文件" + SelectedFile[0], SelectedFile[1]);
				// fileToOpenSwf.browseForOpen("Open",[txtFilter]);
				fileToOpenSwf.browseForOpenMultiple("Open", [txtFilter]);
				// fileToOpenSwf.addEventListener(Event.SELECT,SWFfileSelected);
				fileToOpenSwf.addEventListener(FileListEvent.SELECT_MULTIPLE, SWFfileSelected);
			}

			private function IOERR(e:IOErrorEvent):void
			{
				ShowAlert("Error：File or directory is in use.");
			}

			protected function SWFfileSelected(event:FileListEvent):void
			{
				PathDic=new Dictionary();
				ByteOriginal=new Dictionary();
				ByteEncrypt=new Dictionary();
				fileArray=event.files;
				var len:int=fileArray.length;
				var f:File=null;
				var loader:URLLoader=null;
				for (var i:int=0; i < len; i++)
				{
					f=fileArray[i];
					loader=new URLLoader(new URLRequest(f.nativePath));
					PathDic[loader]=f.nativePath;
					loader.dataFormat=URLLoaderDataFormat.BINARY;
					loader.addEventListener(Event.COMPLETE, SWFLoaderSuccess);
					opentxt.text=f.nativePath;
				}
				// var uq:URLRequest =new URLRequest(fileToOpenSwf.nativePath);
				// var loader:URLLoader =new URLLoader(uq);
				// loader.dataFormat=URLLoaderDataFormat.BINARY;
				// loader.addEventListener(Event.COMPLETE,SWFLoaderSuccess);
				// opentxt.text=fileToOpenSwf.nativePath;
			}

			protected function SWFLoaderSuccess(e:Event):void
			{
				var path:String=PathDic[e.currentTarget];
				// ====================================
				var curByteArray:ByteArray=null;
				var tempbytes:ByteArray=null;
				var bytes:ByteArray=e.target.data as ByteArray;
				bytes.position=0;
				if (bytes.bytesAvailable > 0)
				{
					var temp:ByteArray=new ByteArray();
					temp.writeBytes(bytes);
					temp.position=0;
					if (temp.readInt() == 2222 && temp.readInt() == 7777)
					{
						temp.readBytes(temp);
						temp.position=0;
						temp.uncompress();
						bytes=temp.readObject() as ByteArray;
					}
					bytes.position=0;
					bytes.position=bytes.length - 8;
					var datalen:int=bytes.readInt();
					var dataend:int=bytes.readInt();
					if (dataend == 8888)
					{
						bytes.position=bytes.length - datalen - 8 + 1;
						var Code:String=bytes.readMultiByte(datalen, "utf-8");
						var Barr:Array=Code.split("ABA5I5");
						if (Barr.length == 2)
						{
							bytes=new ByteArray();
							bytes=ZLIB.uncompress(Barr[1]) as ByteArray;
						}
					}
					bytes.position=0;
					var op:int=0;
					var ll:int=2010;
					if (bytes.readInt() == ll)
					{
						op=bytes.position;
						if (bytes.readInt() == ll + 201)
						{
							ll=bytes.readInt();
						}
						else
						{
							bytes.position=0;
							ll=bytes.readInt();
						}
						var byte:ByteArray=new ByteArray();
						bytes.readBytes(byte, 0, bytes.bytesAvailable);
						for (var ii:int=0; ii < byte.length; ii++)
						{
							byte[ii]=byte[ii] ^ ll;
						}
						bytes=byte;
					}
				}
				// ====================================
				bytes.position=0;
				curByteArray=new ByteArray();
				curByteArray.writeBytes(bytes);
				// ByteOriginal=new ByteArray();
				// ByteOriginal.writeBytes(bytes);
				ByteOriginal[path]=curByteArray;
				// ====================================
				var times:int=getTimer();
				var arrayLen:int=bytes.length;
				var key:int=int(Math.random() * 1000) + int(Math.random() * 9999) + 1000;
				for (var i:int=0; i < arrayLen; i++)
				{
					bytes[i]=bytes[i] ^ key;
				}
				tempbytes=new ByteArray();
				tempbytes.writeInt(2010);
				tempbytes.writeInt(2211);
				tempbytes.writeInt(key);
				tempbytes.writeBytes(bytes);
				times=getTimer() - times;
				// ====================================
				tempbytes.position=0;
				curByteArray=new ByteArray();
				curByteArray.writeBytes(tempbytes);
				// ByteEncrypt=new ByteArray();
				// ByteEncrypt.writeBytes(tempbytes);
				ByteEncrypt[path]=curByteArray;
				// ====================================
				keytxt.text="encrypt number：" + key;
				timetxt.text="encrypt time: " + times + " ms";
				sizetxt.text=curByteArray.length + "";
				// nametxt.text=getFileName(opentxt.text)+".amd";
				if (CboxAuto.selected)
				{
					btnSaveEncrypt_clickHandler(new MouseEvent(MouseEvent.CLICK));
				}
				loadNum++;
				if(isLine&&loadNum==fileEvent.files.length){
					btnSaveEncrypt_clickHandler();
					loadNum=0;
					isLine=false;
				}
			}
			private var loadNum:int=0;
			private var resultMsg:String="";

			protected function SaveFile(bytes:ByteArray, FilePath:String):void
			{
				var file:File=new File();
				file.nativePath=FilePath;
				var bo:Boolean=opentxt.text.indexOf(".amd") == -1;
				var fs:FileStream=new FileStream();
				fs.open(file, "write");
				bytes.position=0;
				fs.writeBytes(bytes, 0, bytes.length);
				fs.close();
				resultMsg+=unescapeMultiByte(file.url) + "\n";
//                ShowAlert("已经成功写出文件\n" + unescapeMultiByte(file.url));
				if (myCheckBox.selected && fileToOpenSwf.exists && bo)
				{
					try
					{
						setTimeout(fileToOpenSwf.deleteFile, 500);
					}
					catch (e:Error)
					{
						ShowAlert("Error #3013: File or directory is in use.");
					}
				}
			}

			private function ShowAlert(msg:String, title:String="操作结果"):void
			{
				Alert.buttonWidth=100;
				Alert.cancelLabel="确定";
				Alert.show(msg, title, 8, this);
			}

			private function getFileNewPathSWF(path:String, filename:String):String
			{
				return getFilePath(path) + filename;
			}

			private function getFileName(names:String):String
			{
				var len:Array=names.split("=");
//                if (len.length > 1)
//                    names = names.split("_").join("");
				var na:int=names.lastIndexOf("\\");
				na=na == -1 ? 0 : na + 1;
				names=names.substr(na, names.length);
				names=unescapeMultiByte(names.substr(0, names.lastIndexOf(".")).toLowerCase());
				return (len.length > 1) ? names.split("=")[0] : names;
			}

			private function getFilePath(names:String):String
			{
				var na:int=names.lastIndexOf(".") - 1;
				na=na == -1 ? 0 : na + 1;
				names=names.substr(0, na);
				names=names.split("=")[0];
				na=names.lastIndexOf("\\");
				var fileName:String=names.substr(na + 1, names.length);
				names=names.substr(0, na + 1);
//                if (fileName.split("_").length > 2)
//                {
//                    fileName = fileName.split("_").join("");
//                }
				return unescapeMultiByte(names + fileName);
			}

			protected function btnSaveOriginal_clickHandler(event:MouseEvent):void
			{
				if (ByteOriginal == null)
					return;
				var ba:ByteArray=null;
				resultMsg="";
				for (var element:String in ByteOriginal)
				{
					ba=ByteOriginal[element];
					ba.position=0;
					if (ba.bytesAvailable > 0)
					{
						SaveFile(ba, getFileNewPathSWF(element, "_d.swf"));
							// SaveFile(ba,getFileNewPathSWF(opentxt.text,"_d.swf"));
					}
					else
					{
						ShowAlert("无效的数据流，写出失败！");
					}
				}
				ByteOriginal=null;
				if(isLine){
					this.close();
				}else{
					ShowAlert("已处理过:\n" + resultMsg);
				}
			}

			protected function btnSaveEncrypt_clickHandler(event:MouseEvent=null):void
			{
				if (ByteEncrypt == null)
					return;
				var ba:ByteArray=null;
				resultMsg="";
				for (var element:String in ByteEncrypt)
				{
					ba=ByteEncrypt[element];
					ba.position=0;
					if (ba.bytesAvailable > 0)
					{
						SaveFile(ba, getFilePath(element) + ".amd");
							// SaveFile(ba,getFilePath(opentxt.text)+nametxt.text);
					}
					else
					{
						ShowAlert("无效的数据流，写出失败！");
					}
				}
				ByteEncrypt=null;
				if(isLine){
					this.close();
				}else{
					ShowAlert("已处理过:\n" + resultMsg);
				}
			}
		]]>
	</mx:Script>

	<mx:Image x="0" y="0" width="800" height="600" source="img/bj.jpg"/>
	<mx:Panel x="10" y="114" width="778" height="474" alpha="1.0" backgroundAlpha="0.3"
			  backgroundColor="#FCFCFD" borderColor="#FDFEFF" color="#FAFCFC" cornerRadius="10"
			  layout="absolute">
		<mx:TextInput id="opentxt" x="10" y="47" width="355" color="#094F7C"/>
		<mx:Label x="10" y="19" text="Please upload your swf first："/>
		<mx:TextInput id="sizetxt" x="362" y="394" width="146" color="#094F7C"/>
		<mx:Label x="263" y="398" text="Export size："/>
		<mx:Button x="263" y="81" width="102" height="35" label="browse"
				   click="button1_clickHandler(event)" color="#105987" fillAlphas="[1.0, 1.0]"
				   fillColors="[#E9F0FD, #8ABCFA]"/>
		<mx:Button id="btnSaveEncrypt" x="599" y="366" width="149" height="52"
				   label="Save encrypt file" click="btnSaveEncrypt_clickHandler(event)"
				   color="#0D4C7C" fillAlphas="[1.0, 1.0]" fillColors="[#E9F0FD, #8ABCFA]"/>
		<mx:Button id="btnSaveOriginal" x="263" y="124" width="102" height="35" label="original"
				   click="btnSaveOriginal_clickHandler(event)" color="#0D4C7C"
				   fillAlphas="[1.0, 1.0]" fillColors="[#E9F0FD, #8ABCFA]"/>
		<mx:CheckBox id="myCheckBox" x="10" y="394" label="delete the original file" color="#FBFCFE"/>
		<mx:CheckBox id="Cbox2" x="10" y="102" label="swf file" color="#FDFDFD"/>
		<mx:CheckBox id="Cbox1" x="10" y="79" label="all file" color="#F8F9FC"/>
		<mx:CheckBox id="Cbox3" x="10" y="130" label="amd File" color="#FCFCFC"/>
		<mx:CheckBox id="Cbox4" x="10" y="336" label="original" color="#FCFCFC"/>
		<mx:CheckBox id="CboxAuto" x="10" y="364" label="Auto Save" color="#FCFCFC"/>
		<mx:Label id="timetxt" x="263" y="334" width="149" color="#FEFEFC" text="encrypt time:0ms"
				  textAlign="left"/>
		<mx:Label id="keytxt" x="263" y="366" width="149" color="#FEFEFC" text="encrypt number!"
				  textAlign="left"/>
	</mx:Panel>
	<mx:Label x="618" y="10" color="#4895A6" text="Copyright:XH0110000010"/>
	<mx:Label x="618" y="28" color="#488A98" text="Version:11.03.17"/>

</mx:WindowedApplication>
